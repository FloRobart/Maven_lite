.\" Automatically generated by Pandoc 3.1.8
.\"
.TH "Maven Lite" "1" "Septembre 2023" "Maven Lite Version 1.1.0" "Commandes Utilisateur"
.SH NOM
mvnl \[en] Gestionnaire de projet Java simple et léger inspiré du
gestionnaire de projet \f[CR]Maven\f[R].
.SH SYNOPSIS
mvnl [OPTION]\&...
[ARGUMENT]\&...
.SH DESCRIPTION
Permet de compiler et lancer un projet java en utilisant le minimum
d\[cq]options et de manipulation.
Facilite la compilation et le lancement d\[cq]un projet java plus
simplement que maven.
.PP
Toutes les options prennent un seul argument sauf \[en]c et \[en]l qui n\[cq]en
prennent aucun.
.PP
L\[cq]ordre des options n\[cq]a pas d\[cq]importance sauf pour
l\[cq]option \[en]f qui doit être la première option de la ligne de
commande.
les guillements double ne sont pas obligatoires, sauf si l\[cq]argument
contient un espace
.PP
Les options qui sont utilisé avec \[en]c alors qu\[cq]elles sont utilisable
uniquement avec \[en]l sont ignorées et inversement.
Les options qui sont utilisable avec \[en]c ou \[en]l sont utilisable avec \[en]cl
et \[en]lc.
.PP
Les arguments obligatoires pour les options longues le sont aussi pour
les options courtes
.SH EXEMPLES
.IP \[bu] 2
\f[CR]mvnl \[en]s src \[en]o bin \[en]c \[en]e UTF\[en]8\f[R] \[en]\[en]> compile le projet java
avec l\[cq]encodage UTF\[en]8 qui se trouve dans le dossier src et met les
fichiers compilés dans le dossier bin.
.IP \[bu] 2
\f[CR]mvnl \[en]s src \[en]o bin \[en]m package.Main \[en]cl\f[R] \[en]\[en]> compile et
lance le projet java qui se trouve dans le dossier src et met les
fichiers compilés dans le dossier bin, puis lance la classe
package.Main.
.IP \[bu] 2
\f[CR]mvnl \[en]s src \[en]o bin \[en]m package.Main \[en]lc \[en]arg argument_1 \[en]arg argument_2\f[R]
\[en]\[en]> compile et lance le projet java qui se trouve dans le dossier src
et met les fichiers compilés dans le dossier bin, puis lance la classe
package.Main avec les arguments argument_1 et argument_2 dans
l\[cq]ordre de passage à la commande.
.IP \[bu] 2
\f[CR]mvnl \[en]m package.Main \[en]l \[en]cp bin:lib\f[R] \[en]\[en]> lance la classe
package.Main en ajoutant le dossier bin et le dossier lib au classpath
du projet.
.IP \[bu] 2
\f[CR]mvnl \[en]m Main \[en]d lib \[en]l\f[R] \[en]\[en]> lance la classe Main en
ajoutant tout les fichiers jar du dossier lib au classpath du projet.
.IP \[bu] 2
\f[CR]mvnl \[en]s src \[en]o bin \[en]m package.Main \[en]cl \[en]dt data\f[R] \[en]\[en]>
compile le projet java qui se trouve dans le dossier src et met les
fichiers compilés dans le dossier bin, puis lance la classe package.Main
et copie le dossier data dans le dossier bin.
.IP \[bu] 2
\f[CR]mvnl \[en]f config.txt \[en]cl\f[R] \[en]\[en]> charge les options à partir du
fichier config.txt.
Content du fichier config.txt :
\f[CR]\[en]s src \[en]o bin \[en]m package.Main\f[R].
compile et lance le projet java qui se trouve dans le dossier src et met
les fichiers compilés dans le dossier bin, puis lance la classe
package.Main.
.SH COMPORTEMENT PAR DÉFAUT
Par défaut si aucune option n\[cq]est spécifié, la commande
\f[CR]mvnl\f[R] affiche la page d\[cq]aide qui est affiché avec
l\[cq]option \f[CR]\[en]h\f[R] ou \f[CR]\[en]\[en]help\f[R].
Cette page d\[cq]aide est différente et plus simpe de la page de manuel
qui est affiché avec la commande \f[CR]man mvnl\f[R].
.SH OPTIONS
.SS Toutes les options
\[en]v , \[en]\[en]version Afficher la version et quitter.
.PP
\[en]s , \[en]\[en]source Dossier racine du projet à compiler.
.PP
\[en]o , \[en]\[en]output Dossier de sortie des fichiers compilés.
.PP
\[en]cp , \[en]\[en]classpath Liste des fichiers jar et du dossier de sortie des
fichiers compilés (le même dossier que pour l\[cq]option \[en]o) à ajouter
au classpath lors de la compilation et du lancement.
Les fichiers jar doivent être séparés par des `:'.
La valeur par defaut du classpath est le dossier de sortie des fichiers
compilés si l\[cq]option \[en]o est utilisé, sinon le classpath sera le
dossier courent.
.PP
\[en]d , \[en]\[en]dependency Dossier contenant les fichiers jar utiliser par le
programme.
Tout les fichiers jar seront ajoutés au classpath lors de la compilation
et du lancement.
.PP
\[en]n , \[en]\[en]name Permet de changer le nom du fichier contenant les chemins
des fichiers java à compiler.
Le nom par defaut est `compile.list'.
Utilisable uniquement avec l\[cq]option \[en]c.
.PP
\[en]e , \[en]encoding Permet de changer l\[cq]encodage des fichiers java à
compiler L\[cq]encodage par defaut est `UTF\[en]8'.
Utilisable uniquement avec l\[cq]option \[en]c.
.PP
\[en]m , \[en]main Classe principale à lancer.
Utilisable uniquement avec l\[cq]option \[en]l.
.PP
\[en]dt , \[en]data Dossier contenant les données du projet.
Permet de copier le dossier de données dans le dossier de sortie.
Utilisable uniquement avec l\[cq]option \[en]c.
.PP
\[en]arg, \[en]arguments Arguments à passer à la classe principale.
Un argument par option, c\[cq]est à dire que si vous voulez passer deux
arguments il faudra utiliser deux fois l\[cq]option \[en]arg.
Lordre des arguments passé à la classe principale est le même que
l\[cq]ordre de passage à la commande.
Les arguments de la ligne de commande sont pris en compte avant les
arguments du fichier de configuration.
Les arguments ne peuvent pas contenir d\[cq]espace sans peine de bug.
Utilisable uniquement avec l\[cq]option \[en]l.
.PP
\[en]f , \[en]file Fichier de configuration.
Permet de charger les options à partir d\[cq]un fichier de
configuration, le séparateur sont l\[cq]espace et le retour à la ligne.
Les options du fichier de configuration prédomine sur les options de la
ligne de commande.
L\[cq]option \[en]f doit obligatoirement être la première option de la ligne
de commande.
.PP
\[en]c , \[en]compilation Compiler le projet.
.PP
\[en]l , \[en]launch Lancer le projet.
.PP
\[en]cl , \[en]compile\[en]launch Compiler et lancer le projet.
(équivalent à \[en]c \[en]l)
.PP
\[en]lc , \[en]launch\[en]compile Compiler et lancer le projet.
(équivalent à \[en]c \[en]l)
.PP
\[en]h , \[en]help afficher l\[cq]aide et quitter.
.SS Les options obligatoires pour la compilation sont :
\[en]s, \[en]source Dossier racine du projet à compiler.
.PP
\[en]o, \[en]output Dossier de sortie des fichiers compilés.
.PP
\[en]c, \[en]compilation Compiler le projet.
.SS Les options obligatoires pour le lancement sont :
\[en]m , \[en]main Classe principale à lancer.
.PP
\[en]l , \[en]launch Lancer le projet.
.PP
\[en]cp, \[en]classpath Voir l\[cq]option \[en]cp dans listes des options.
.SS Les options obligatoires pour la compilation et le lancement sont :
\[en]s , \[en]source Dossier racine du projet à compiler.
.PP
\[en]o , \[en]output Dossier de sortie des fichiers compilés.
.PP
\[en]m , \[en]main Classe principale à lancer.
.PP
\[en]cl, \[en]compile\[en]launch Compiler et lancer le projet.
(équivalent à \[en]c \[en]l)
.SH CODES DE RETOUR
0 : Tout c\[cq]est bien passé.
.PP
1 : Une erreur est survenue.
.SH FICHIERS
Maven Lite est constitué d\[cq]uniquement 2 fichiers.
.IP \[bu] 2
\f[CR]mvnl\f[R], le fichier principal qui se situe dans le dossier
\f[CR]/usr/bin\f[R].
.IP \[bu] 2
\f[CR]mvnl.1.gz\f[R], le fichier d\[cq]aide contenant la page de manuel
afficher avec la commande \f[CR]man mvnl\f[R] qui se situe dans le
dossier \f[CR]/usr/local/man/fr/man1\f[R]
.SH BOGUES
Il y un seul bogue connu qui concerne les arguments avec des espaces,
que se sois en ligne de commande ou dans le fichier de configuration.
Il ne faut donc pas mettre d\[cq]espaces dans les arguments.
.SH AUTHEUR
Écrit par Robart Floris.
.SH RAPPORT DE BOGUES
Reporter les bogues par mail à l\[cq]adresse <florisrobart.pro@gmail.com>
en précisant quel est le bogues, comment puis-je le reproduire et qu'il concerne Maven Lite.
