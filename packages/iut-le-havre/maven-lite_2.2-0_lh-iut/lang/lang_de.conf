# Konfigurationsdatei für die deutsche Sprache
# Format:
# Schlüssel = Wert # Kommentar

# Wenn Sie eine neue Sprache hinzufügen möchten, können Sie diese Datei kopieren und umbenennen, indem Sie lang_fr durch den Sprachcode ersetzen.
# Anschließend können Sie die Werte jeder Schlüssel übersetzen.

# Allgemein
langName = Deutsch
success = Erfolg
info = Information
warning = Warnung
error = Fehler

# Schlüsselwörter
from = von
to = zu
for = für
and = und
by = von
or = oder
option = Option
options = Optionen
loption = die Option
fichier = Die Datei
dossier = Der Ordner
project = das Projekt
usage = Nutzung
argument = Argument
unknown = unbekannt
careful = Achtung
compile = Kompilieren
launch = Starten
alreadyExist = existiert bereits
notExist = existiert nicht
nbArgs = Anzahl der Argumente
defaultValue = Standardwert
fullDoc = Vollständige Dokumentation
createdSuccess = wurde erfolgreich erstellt
compilation = Kompilierung des Projekts
launching = Start des Projekts
launchingJar = Start der Jar-Datei
seeHelp = Hilfe anzeigen
executeCommand = Befehl ausführen
notFolder = ist kein Ordner
sourceProject = Quellverzeichnis des Projekts
useCommand = Befehl verwenden
needArgument = benötigt ein Argument
hasClear = wurde geleert

# Sätze
availableLangDesc = Verfügbare Sprachen  
availableLang = Französisch (fr), Englisch (en), Deutsch (de), Spanisch (es), Italienisch (it)
successChangeLang = Sprachänderung erfolgreich durchgeführt
targetProject = Ausgabeordner für die kompilierten Dateien des Projekts
librariesProject = Liste der Bibliotheken, die zum Classpath hinzugefügt werden sollen
configData = aus den Daten der Konfigurationsdatei
desinstall = Deinstallation von Maven Lite...
desinstallConfirm = Sie sind dabei, Maven Lite zu deinstallieren. Sind Sie sicher, dass Sie fortfahren möchten?
canceledDesinstallation = Deinstallation abgebrochen
deletingManPage = Löschen der Handbuchseiten in verschiedenen Sprachen...
successDeletingManPage = Handbuchseiten erfolgreich gelöscht
failureReading = Fehler beim Lesen von
failureWriting = Fehler beim Schreiben von
failureCreating = Fehler beim Erstellen von
failureDeleting = Fehler beim Löschen von
failureCoping = Fehler beim Kopieren von
failureRemovingFolder = Fehler beim Entfernen des Ordners
failureCompilation = Fehler beim Kompilieren des Projekts
failureLaunch = Fehler beim Starten des Projekts
failureLaunchJar = Fehler beim Starten der Jar-Datei
failureCommand = Fehler bei der Ausführung des Befehls
successDeleting = Erfolgreiches Löschen von
successCompilation = Erfolgreiches Kompilieren des Projekts
successLaunch = Erfolgreiches Starten des Projekts
successLaunchJar = Erfolgreiches Starten der Jar-Datei
mainNotFind = Die Hauptklasse des Projekts konnte nicht gefunden werden. Sie können die Hauptklasse mit der Option angeben
argumentWarning = Wenn das Argument mit dem Zeichen '-' beginnt, escapen Sie das Zeichen '-' mit zwei `\` so:

# Beschreibung der Argumente
arg_file = Ermöglicht das Laden von Optionen aus einer Konfigurationsdatei.
arg_create = Erstellt die Projektstruktur sowie eine Standardkonfigurationsdatei.
arg_mvc_1 = Ermöglicht die Angabe der Option
arg_mvc_2 = zur Erstellung der Struktur eines MVC-Projekts.
arg_compilation = Kompiliert das Projekt.
arg_launch = Startet das Projekt.
arg_compile-launch = Kompiliert und startet das Projekt. (entspricht -c -l)
arg_launch-compile = Kompiliert und startet das Projekt. (entspricht -c -l)
arg_quiet = Unterdrückt die Java-Ausgabe im Terminal während der Projektausführung.
arg_verbose = Zeigt die ausgeführten Befehle an.
arg_exclude = Ermöglicht das Ausschließen von Java-Dateien und Ordnern aus der Kompilierung. Wenn Sie ein Argument übergeben möchten, das mit '-' beginnt, escapen Sie das Zeichen '-' mit zwei `\` so: '-ex \\-datei'.
arg_compile-jar = Erstellt eine Jar-Datei für Ihr Projekt. Sie können den Namen der zu erstellenden Jar-Datei angeben. Wenn Sie keinen Namen angeben, wird der Name des Projekts verwendet.
arg_launch-jar = Startet eine ausführbare Jar-Datei. Sie können den Namen der zu startenden Jar-Datei angeben. Wenn Sie keinen Namen angeben, wird der Name des Projekts verwendet.
arg_integrate-test = Integriert Unit-Tests in das Projekt.
arg_create-file = Erstellt eine Konfigurationsdatei basierend auf den Befehlszeilenoptionen. Sie können den Namen der zu erstellenden Datei angeben.
arg_source = Ordner, der die zu kompilierenden Java-Dateien enthält.
arg_target = Ausgabeordner für die kompilierten Dateien. Dieser Ordner wird erstellt, falls er nicht existiert, und automatisch zum Classpath während der Kompilierung und des Starts hinzugefügt.
arg_resources = Ordner, der die Ressourcen enthält, die im Falle der Erstellung einer Jar-Datei in den Ausgabeordner kopiert werden sollen.
arg_classpath = Ermöglicht die Angabe des zu verwendenden Classpaths während der Kompilierung und des Starts. Wenn Sie mehrere Elemente zum Classpath hinzufügen möchten, trennen Sie diese mit ':'.
arg_libraries = Ordner, der die vom Programm verwendeten Jar-Dateien enthält. Alle Jar-Dateien werden während der Kompilierung und des Starts zum Classpath hinzugefügt.
arg_arguments = Alle Argumente, die an die Hauptklasse übergeben werden sollen. Wenn Sie ein Argument übergeben möchten, das mit '-' beginnt, escapen Sie das Zeichen '-' mit zwei `\` so: '-args \\\\-argument_für_main'.
arg_main = Hauptklasse, die gestartet werden soll. Wenn Sie eine Klasse starten möchten, die sich in einem Paket befindet, müssen Sie das Paket mit dem Klassennamen so angeben: 'paket.name.MainClass'
arg_encoding = Ermöglicht das Ändern der Zeichenkodierung der zu kompilierenden Java-Dateien.
arg_export = Erstellt eine ausführbare Jar-Datei, mit der das Projekt gestartet werden kann, ohne MavenLite installiert zu haben.
arg_maven = Konvertiert das Projekt in ein Maven-Projekt, indem eine pom.xml-Datei erstellt und Dateien ggf. verschoben werden.
arg_version = Zeigt die Version an.
arg_help = Zeigt die Hilfe an und beendet das Programm.
arg_clear = Ermöglicht das Löschen von Dateien im Ausgabeordner der kompilierten Dateien.
arg_add-compile-option = Fügt Java während der Kompilierung eine Option hinzu. Achtung: Es erfolgt keine Überprüfung der Option, seien Sie also vorsichtig mit dem, was Sie hinzufügen.
arg_add-launch-option = Fügt Java während des Starts eine Option hinzu. Achtung: Es erfolgt keine Überprüfung der Option, seien Sie also vorsichtig mit dem, was Sie hinzufügen.
arg_language = Zeigt die Liste der verfügbaren Sprachen an, wenn kein Argument übergeben wird. Wenn ein Argument übergeben wird, kann die Sprache der Anwendung geändert werden : mvnl -lang en
