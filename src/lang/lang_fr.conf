# Fichier de configuration de la langue française
# Format :
#clé = valeur # Commentaire

# Si vous voulez ajouter une nouvelle langue, vous pouvez copier ce fichier et le renommer en remplaçant lang_fr par le code de la langue.
# Ensuite, vous pouvez traduire les valeurs de chaque clé.

# Général
langName = français
success = succes
info = info
warning = avertissement
error = erreur

# Mots clés
from = de
to = à
for = pour
and = et
by = par
or = ou
option = option
options = Options
loption = l’option
fichier = Le fichier
dossier = Le dossier
project = le projet
usage = Utilisation
argument = Argument
unknown = inconnue
careful = attention
compile = Compiler
launch = Lancer
alreadyExist = existe déjà
notExist = n’existe pas
nbArgs = Nombre d’arguments
defaultValue = Valeur par défaut
fullDoc = Documentation complète
createdSuccess = a été créé avec succès
compilation = Compilation du projet
launching = Lancement du projet
launchingJar = Lancement du fichier jar
seeHelp = afficher l’aide
executeCommand = exécuter la commande
notFolder = n’est pas un dossier
sourceProject = Dossier source du projet
useCommand = Utiliser la commande
needArgument = nécessite un argument
hasClear = a été vidé

# Phrases
availableLangDesc = Langues disponibles
availableLang = Français (fr), Anglais (en), Allemand (de), Espagnol (es), Italien (it)
successChangeLang = Changement de la langue effectué avec succès
targetProject = Dossier de sortie des fichiers compilés du projet
librariesProject = Liste des libraries à ajouter au classpath
configData = à partir des données du fichier de configuration
desinstall = Désinstallation de Maven Lite...
desinstallConfirm = vous êtes sur le point de désinstaller Maven Lite. Êtes-vous sûr de vouloir continuer ?
canceledDesinstallation = Désinstallation annulée
deletingManPage = Suppression des pages de manuel dans les différentes langues...
successDeletingManPage = Pages de manuel supprimées avec succès
failureReading = Échec lors de la lecture de
failureWriting = Échec lors de l’écriture de
failureCreating = Échec lors de la création de
failureDeleting = Échec lors de la suppression de
failureCoping = Échec lors de la copie de
failureRemovingFolder = Échec lors de la suppression du dossier
failureCompilation = Échec lors de la compilation du projet
failureLaunch = Échec lors du lancement du projet
failureLaunchJar = Échec lors du lancement du fichier jar
failureCommand = Échec lors de l’execution de la commande
successDeleting = Succès lors de la suppression de
successCompilation = Succès lors de la compilation du projet
successLaunch = Succès lors du lancement du projet
successLaunchJar = Succès lors du lancement du fichier jar
mainNotFind = Impossible de trouver la classe principale du projet. Vous pouvez spécifier la classe principale avec l’option
argumentWarning = Si l’argument commence par le caractère '-' veuillez échapé le caractère '-' avec deux `\` comme ceci :

# Description des arguments
arg_file = Permet de charger les options à partir d’un fichier de configuration.
arg_create = Créer l’arborescence du projet ainsi qu’un fichier de config par défaut.
arg_mvc_1 = Permet de spécifier à l’option
arg_mvc_2 = de créer l’arborescence d’un projet MVC.
arg_compilation = Compile le projet.
arg_launch = Lance le projet.
arg_compile-launch = Compile et lance le projet. (équivalent à -c -l)
arg_launch-compile = Compile et lance le projet. (équivalent à -c -l)
arg_quiet = Permet de supprimer l’affichage de java dans le terminal lors de l’exécution du projet.
arg_verbose = Permet d’afficher les commandes exécutées.
arg_exclude = Permet d’exclure des fichiers java et des dossiers de la compilation. Si vous voulez passé un argument qui commencer par '-' échapper le caractère '-' avec deux `\` comme ceci : '-ex \\-fichier'.
arg_compile-jar = Permet de créer un fichier jar de votre projet. Vous pouvez spécifier le nom du fichier jar à créer. Si vous ne spécifiez pas de nom, le nom du fichier jar sera le nom du projet.
arg_launch-jar = Permet de lancer un fichier jar exécutable. Vous pouvez spécifier le nom du fichier jar à lancer. Si vous ne spécifiez pas de nom, le nom du fichier jar sera le nom du projet.
arg_integrate-test = Permet d’intégrer les tests unitaires au projet.
arg_create-file = Permet de créer un fichier de configuration à partir des options de la ligne de commande. Vous pouvez spécifier le nom du fichier de configuration à créer.
arg_source = Dossier contenant les fichiers java à compiler.
arg_target = Dossier de sortie des fichiers compilés. Ce dossier sera créer si il n’existe pas et sera automatiquement ajouter au classpath lors de la compilation et du lancement.
arg_resources = Dossier contenant les fichiers ressources à copier dans le dossier de sortie des fichiers compilés dans le cas de la création d’un fichier jar.
arg_classpath = Permet de spécifier le classpath à utiliser lors de la compilation et du lancement. Si vous voulez ajouter plusieurs éléments au classpath, il faut les séparer par des ':'.
arg_libraries = Dossier contenant les fichiers jar utiliser par le programme. Tout les fichiers jar seront ajoutés au classpath lors de la compilation et du lancement.
arg_arguments = Tous les arguments à passer à la classe principale. Si vous voulez passé un argument qui commencer par '-' échapper le caractère '-' avec deux `\` comme ceci : '-args \\\\-argument_pour_le_main'.
arg_main = Classe principale à lancer. Si vous voulez lancer une classe qui se trouve dans un package, il faut spécifier le package avec le nom de la classe comme ceci : 'package.nom.MainClass'
arg_encoding = Permet de changer l’encodage des fichiers java à compiler.
arg_export = Permet de créer un fichier jar exécutable permettant de lancer le projet sans avoir installer MavenLite.
arg_maven = Convertie le projet en projet maven en créant un fichier pom.xml et en déplaçant les fichiers si nécessaire.
arg_version = Affiche la version.
arg_help = Affiche l’aide et quitte.
arg_clear = Permet de supprimer les fichiers dans le dossier de sortie des fichiers compilés.
arg_add-compile-option = Permet d’ajouter une option à java lors de la compilation. Attention, Aucune vérification n’est faite sur l’option, il faut donc faire attention à ce que vous ajoutez.
arg_add-launch-option = Permet d’ajouter une option à java lors du lancement. Attention, Aucune vérification n’est faite sur l’option, il faut donc faire attention à ce que vous ajoutez.
arg_language = Affiche la liste des langues disponibles si aucun argument n’est passé. Si un argument est passé, il permet de changer la langue de l’application : mvnl -lang en
